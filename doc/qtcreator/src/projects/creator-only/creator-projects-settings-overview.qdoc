// Copyright (C) 2023 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \previouspage creator-version-control.html
    \page creator-configuring-projects.html
    \nextpage creator-project-managing-sessions.html

    \title Configuring Projects

    When you install Qt for a development or target platform, such as Linux,
    \macos, Windows, Android or QNX, \l{https://www.qt.io/download-qt-installer}
    {\QOI} creates \l{glossary-buildandrun-kit}{kits} for the development targets.

    Select the kits to use for a project in the \uicontrol {Configure Projects}
    view when you open the project for the first time. At least one kit must be
    active.

    To maintain the list of active kits for a currently open project, switch to
    the \uicontrol Projects mode by pressing \key Ctrl+5.

    \image qtcreator-projects-kits.webp {Sidebar in the Projects mode}

    To specify build or run settings for a kit, select \uicontrol Build or
    \uicontrol Run below the kit name.

    \section1 Specifying Build Settings

    \image qtcreator-build-configurations.png {Build configurations}

    Different build configurations allow you to quickly switch between
    different build settings. By default, \QC creates the following
    configurations:

    \list
        \li Debug
        \li Release
        \li Profile
    \endlist

    A debug build has debug symbols that you need for debugging the application
    but that you can leave out from the release version. Generally, you use the
    debug configuration for testing and the release configuration for creating
    the final installation binary package.

    If you selected CMake as the build system for the project, you can
    use a \e {minimum size release} build configuration to create the
    final installation binary package. It is a release build that makes the size
    of the binary package as small as possible, even if this makes the
    application slower.

    A profile build (which is called \e {release with debug information}
    when using CMake) is an optimized release build that is delivered
    with separate debug information. It is best suited for analyzing
    applications.

    \section1 Specifying Run Settings

    The run settings to specify depend on the type of the project and on the
    \l{Kits}{Run device} that you select for the kit.

    \QC automatically creates deploy and run configurations for your project.

    \image qtcreator-settings-run-desktop.webp {Run Settings}

    To prevent \QC from automatically creating run configurations, select
    \preferences > \uicontrol {Build & Run}, and then deselect the
    \uicontrol {Create suitable run configurations automatically} check box.

    \section1 Overriding Global Preferences

    In \uicontrol {Project Settings}, you can override global preferences for
    the project:

            \list
                \li \l{Parsing C++ Files with the Clang Code Model}{Clangd}
                \li \l{Using Clang Tools}{Clang Tools}
                \li \l{Specify code style}{C++ Code Style}
                \li \l{Set C++ file naming preferences}{C++ File Naming}
                \li \l{Specify dependencies}{Dependencies}
                \li \l{Document code}{Documentation Comments}
                \li \l{Specify editor settings}{Editor}
                \li \l{Specify the environment for projects}{Environment}
                \li \l{Applying Refactoring Actions}{Quick Fixes}
                \li \l{To-Do Entries}{To-Do} (experimental)
            \endlist

    If you have multiple projects open in \QC, select the project to configure
    in \uicontrol {Active Project}.

    \sa {Activate kits for a project}, {Configure projects for building},
    {Configure projects for running}, {Open projects},
    {Activate custom output parsers}
*/

/*!
    \page creator-how-to-activate-kits.html
    \previouspage creator-how-tos.html

    \ingroup creator-how-to-projects-configure

    \title Activate kits for a project

    The \uicontrol {Build & Run} section of the \uicontrol Projects mode sidebar
    lists the kits that are compatible with your project. To activate one or more
    kits, click them.

    \image qtcreator-project-kits.png {List of kits in Projects mode sidebar}

    The list displays kits from \preferences >
    \uicontrol Kits. Warning and error icons indicate that the kit configuration
    is not suitable for the project type. To view the warning and error messages,
    move the mouse pointer over the kit name.

    In the list of kits, you may see entries described as \e {Replacement for
    <kit-name>}. \QC generates them to save your project-specific settings,
    such as custom build flags or run configuration arguments that would
    disappear if the corresponding kits were simply removed when you remove
    Qt versions while updating your Qt installation. You can modify the kit
    configuration to use a currently installed Qt version and save the kit
    under a new name.

    \section1 Manage kits

    To modify kit configuration or to \l{Add kits}{add kits} to the list or to
    remove them from it, select \uicontrol {Manage Kits}.

    Each kit consists of a set of values that define one environment, such as a
    \l{glossary-device}{device}, \l{Add compilers}{compiler},
    \l{Add debuggers}{debugger}, and \l{Add Qt versions}{Qt version}.

    To copy the build and run settings for a kit to another kit, select
    \uicontrol {Copy Steps from Other Kit} in the context menu.

    To deactivate a kit, select \uicontrol {Disable Kit for Project} in the
    context menu.

    \note Deactivating a kit removes all custom build and run settings for the
    kit.

    To import an existing build for the project, select
    \uicontrol {Import Existing Build}.

    \sa {Add kits}, {Configuring Projects}, {Kits}
*/
